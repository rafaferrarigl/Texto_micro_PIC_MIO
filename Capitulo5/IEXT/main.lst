CCS PCM C Compiler, Version 5.015, 51569               19-mar.-24 16:17

               Filename:   G:\PC\Microcontrolador_PIC_pdf\Capitulo5\IEXT\main.lst

               ROM used:   136 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   073
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT 
.................... #use delay(clock=2M) 
.................... #use standard_io(D) 
.................... #BYTE OPTION_REG = 0x81 
....................  
.................... int Veces; 
....................  
....................  
.................... #INT_EXT 
....................  
.................... void ext_isr() { 
....................    Veces++; 
002F:  INCF   27,F
....................     
....................     
....................    if (Veces == 1){ 
0030:  DECFSZ 27,W
0031:  GOTO   03B
....................       output_high(PIN_B1); 
0032:  BSF    03.5
0033:  BCF    06.1
0034:  BCF    03.5
0035:  BSF    06.1
....................       output_low(PIN_B5); 
0036:  BSF    03.5
0037:  BCF    06.5
0038:  BCF    03.5
0039:  BCF    06.5
....................    } 
003A:  GOTO   06F
....................    else if(Veces == 2){ 
003B:  MOVF   27,W
003C:  SUBLW  02
003D:  BTFSS  03.2
003E:  GOTO   048
....................       output_high(PIN_B2); 
003F:  BSF    03.5
0040:  BCF    06.2
0041:  BCF    03.5
0042:  BSF    06.2
....................       output_low(PIN_B1); 
0043:  BSF    03.5
0044:  BCF    06.1
0045:  BCF    03.5
0046:  BCF    06.1
....................    } 
0047:  GOTO   06F
....................    else if(Veces == 3){ 
0048:  MOVF   27,W
0049:  SUBLW  03
004A:  BTFSS  03.2
004B:  GOTO   055
....................       output_high(PIN_B3); 
004C:  BSF    03.5
004D:  BCF    06.3
004E:  BCF    03.5
004F:  BSF    06.3
....................       output_low(PIN_B2); 
0050:  BSF    03.5
0051:  BCF    06.2
0052:  BCF    03.5
0053:  BCF    06.2
....................    } 
0054:  GOTO   06F
....................    else if(Veces == 4){ 
0055:  MOVF   27,W
0056:  SUBLW  04
0057:  BTFSS  03.2
0058:  GOTO   062
....................       output_high(PIN_B4); 
0059:  BSF    03.5
005A:  BCF    06.4
005B:  BCF    03.5
005C:  BSF    06.4
....................       output_low(PIN_B3); 
005D:  BSF    03.5
005E:  BCF    06.3
005F:  BCF    03.5
0060:  BCF    06.3
....................    } 
0061:  GOTO   06F
....................    else if(Veces == 5){ 
0062:  MOVF   27,W
0063:  SUBLW  05
0064:  BTFSS  03.2
0065:  GOTO   06F
....................       output_high(PIN_B5); 
0066:  BSF    03.5
0067:  BCF    06.5
0068:  BCF    03.5
0069:  BSF    06.5
....................       output_low(PIN_B4); 
006A:  BSF    03.5
006B:  BCF    06.4
006C:  BCF    03.5
006D:  BCF    06.4
....................       Veces = 0; 
006E:  CLRF   27
....................    } 
....................     
....................     
....................  
006F:  BCF    0B.1
0070:  BCF    0A.3
0071:  BCF    0A.4
0072:  GOTO   01B
.................... } 
....................  
....................  
.................... void main() 
0073:  MOVF   03,W
0074:  ANDLW  1F
0075:  MOVWF  03
0076:  BSF    03.5
0077:  BSF    1F.0
0078:  BSF    1F.1
0079:  BSF    1F.2
007A:  BCF    1F.3
007B:  MOVLW  07
007C:  MOVWF  1C
007D:  BCF    03.7
.................... { 
....................    bit_clear(OPTION_REG, 7);  //Habilitacion PULL-UP 
007E:  BCF    01.7
....................    enable_interrupts(int_ext);  //Habilitacio interrupciones externas  
007F:  BCF    03.5
0080:  BSF    0B.4
....................    ext_int_edge(H_to_L);       //Interrupcion externa en RB0 
0081:  BSF    03.5
0082:  BCF    01.6
....................    enable_interrupts(GLOBAL); //Habilitacio interrupciones Globales  
0083:  MOVLW  C0
0084:  BCF    03.5
0085:  IORWF  0B,F
....................  
....................    while(TRUE) 
....................    { 
0086:  GOTO   086
....................        
....................    } 
....................  
.................... } 
0087:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
