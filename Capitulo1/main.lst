CCS PCM C Compiler, Version 5.015, 51569               18-mar.-24 18:53

               Filename:   G:\PC\Microcontrolador_PIC_pdf\Capitulo1\main.lst

               ROM used:   87 words (1%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           12 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
....................  
.................... #FUSES XT, NOWDT 
.................... #use delay(clock=2M) 
.................... #use standard_io(B) 
.................... #BYTE OPTION_REG = 0x81 //Declaracion PULL-UP 
....................  
....................  
....................  
.................... #INT_EXT 
.................... void ext_isr() { 
.................... 	while(TRUE){ 
.................... 		output_low(PIN_B1); 
002F:  BSF    03.5
0030:  BCF    06.1
0031:  BCF    03.5
0032:  BCF    06.1
.................... 		output_high(PIN_B2); 
0033:  BSF    03.5
0034:  BCF    06.2
0035:  BCF    03.5
0036:  BSF    06.2
0037:  GOTO   02F
.................... 	} 
0038:  BCF    0B.1
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   01B
.................... } 
....................  
.................... void main() 
003C:  MOVF   03,W
003D:  ANDLW  1F
003E:  MOVWF  03
003F:  BSF    03.5
0040:  BSF    1F.0
0041:  BSF    1F.1
0042:  BSF    1F.2
0043:  BCF    1F.3
0044:  BCF    03.7
.................... {    
.................... 	bit_clear(OPTION_REG, 7);  //Habilitacion PULL-UP 
0045:  BCF    01.7
.................... 	enable_interrupts(int_ext);  //Habilitacio interrupciones externas  
0046:  BCF    03.5
0047:  BSF    0B.4
.................... 	ext_int_edge(H_to_L);       //Interrupcion externa en RB0 
0048:  BSF    03.5
0049:  BCF    01.6
.................... 	enable_interrupts(GLOBAL); //Habilitacio interrupciones Globales  
004A:  MOVLW  C0
004B:  BCF    03.5
004C:  IORWF  0B,F
....................  
.................... 	output_low(PIN_B2); //Que este apagado el led en RB2 
004D:  BSF    03.5
004E:  BCF    06.2
004F:  BCF    03.5
0050:  BCF    06.2
.................... 	 
.................... 	while(TRUE) 
.................... 	{ 
.................... 		 
.................... 		output_high(PIN_B1); //Que este encendido el led en RB1 siempre 
0051:  BSF    03.5
0052:  BCF    06.1
0053:  BCF    03.5
0054:  BSF    06.1
0055:  GOTO   051
.................... 	} 
....................  
.................... }   
0056:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
